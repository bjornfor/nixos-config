# Use "tmux show-options [-s|-g]" to see current options.

# Let the mouse select panes, resize panes, scroll, select and copy text.
set-option -g mouse on

# This is a command line, so make emacs keys work there (<prefix> + :)
set-option -g status-keys "emacs"
set-option -g mode-keys "vi"

# Show tmux messages for N ms (or until a key is pressed)
set-option -g display-time 4000

# 24-hour clock
set-window-option -g clock-mode-style 24

# How long to display pane numbers (<prefix> + q). When pane numbers are
# displayed, you can press numeric keys to jump to that pane.
set-option -g display-panes-time 4000

# When a window is closed, renumber higher numbered windows to fill the gap.
set-option -g renumber-windows on

# Start windows and panes at 1, not 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Big history
set-option -g history-limit 100000

# The default green line is easy to miss.
set-option -g pane-active-border-style bg=red

# Move between panes using Vim keys.
# NOTE: This clobbers <prefix> + l to select last active window.
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Move between panes using Alt+<Arrow>. It's very similar (in effort) though
# to use the default binding: <prefix> + <arrow>.
bind-key -n M-Left select-pane -L
bind-key -n M-Down select-pane -D
bind-key -n M-Up select-pane -U
bind-key -n M-Right select-pane -R

# Switch windows with Alt+number.
# WARN: gnome-terminal eats these for itself, if using tabs.
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Inherit current working directory when splitting panes
bind-key '%' split-window -h -c '#{pane_current_path}'
bind-key '"' split-window -v -c '#{pane_current_path}'
# and creating windows
#bind-key c new-window -c '#{pane_current_path}'

# tmux sources files only at startup, when creating a session. To be able to
# reload the config in a running session, when tmux.conf is generated in the
# /nix/store, each time with a new and unique path, we have this wrapper script
# that can be looked up in PATH and that sources the new config for us.
bind-key R run-shell ".tmux-source-conf"

# powerline neeeds custom fonts.
# On NixOS:
#   fonts.fonts = with pkgs; [ powerline-fonts ];
# On non-NixOS, this might work:
#   nix-env -iA nixpkgs.pythonPackages.powerline
source-file "@pythonPackages_powerline@/share/tmux/powerline.conf"
